# frozen_string_literal: true

class ScanUrlsController < ApplicationController
  require 'httparty'
  require 'pry'

  # include DeviseTokenAuth::Concerns::SetUserByToken

  def index
    @vulnerabilities = Vulnerability.all
  end

  def analize
    url = params[:url]
    authentication = params[:authentication]
    vulnerabilities = params[:vulnerabilities]
    dockerInstance = 'http://vulnerabilityscanner_python_server_1:5000/scanner/start'
    analysis = Analysis.create(url: url, is_scan_completed: 0, analysis_date: DateTime.now, user_id: current_user.id)
    result = nil
    begin
      result = HTTParty.post(dockerInstance,
                             body: {
                               idScann: analysis.id,
                               url: url,
                               vulnerabilities: vulnerabilities,
                               Authentication_Token: authentication
                             }.to_json,
                             headers: { 'Content-Type' => 'application/json' })
    rescue StandardError => e
      flash[:alert] = e
      # Si no hay conexion con python elimina el analisis
      analysis.destroy
    end

    unless result.nil?
      if result.code == 200
        flash[:notice] = 'Starting analysis...'
      else
        flash[:alert] = "ERROR #{result.code}"
        # Elimina el analisis en caso de error
        analysis&.destroy
      end
    end
    redirect_to dashboard_path
  end
end
