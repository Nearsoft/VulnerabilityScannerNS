require 'json'

class Vulnerability < ApplicationRecord

  VulnerabilityFound = Struct.new(:id, :name, :description, :prevention, :timesRepeated)

  def self.find_by_alias(v_alias)
    where(['alias like ?', "%#{v_alias}%"]).first
  end

  def self.get_vulnerability_flaws(analysis_id)
    joins('INNER JOIN security_flaws ON security_flaws.vulnerability_id = vulnerabilities.id AND security_flaws.analyses_id = ' + analysis_id)
  end

  def self.get_non_repeated_vulnerabiliteis(repeatedVulnerabilities)
    vulnerabilities = Array.new
    repeatedVulnerabilities.each do |vulnerability|
      if vulnerabilities.length == 0
        vulnerabilityFound = VulnerabilityFound.new(vulnerability.id, vulnerability.name, vulnerability.description, vulnerability.prevention, 1)
        vulnerabilities.push(vulnerabilityFound)
      else
        isVunerabilityRepeated = false;
        vulnerabilities.each do |notRepeatedVulnerability|
          if notRepeatedVulnerability.id == vulnerability.id
            notRepeatedVulnerability.timesRepeated = notRepeatedVulnerability.timesRepeated + 1
            isVunerabilityRepeated = true ;
          end
        end
        if isVunerabilityRepeated == false
          vulnerabilityFound = VulnerabilityFound.new(vulnerability.id, vulnerability.name, vulnerability.description, vulnerability.prevention, 1)
          vulnerabilities.push(vulnerabilityFound)
        end
      end
    end

    return vulnerabilities

  end

end