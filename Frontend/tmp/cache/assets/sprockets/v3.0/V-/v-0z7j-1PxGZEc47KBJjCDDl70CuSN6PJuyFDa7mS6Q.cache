I"k	(function() {
  var Notifications,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Notifications = (function() {
    function Notifications() {
      this.handleSuccess = bind(this.handleSuccess, this);
      this.handleClick = bind(this.handleClick, this);
      this.notifications = $("[data-behavior='notifications']");
      if (this.notifications.length > 0) {
        this.setup();
      }
    }

    Notifications.prototype.setup = function() {
      $("[data-behavior='notifications-link']").on("click", this.handleClick);
      this.getNewNotifications();
      return setInterval(((function(_this) {
        return function() {
          return _this.getNewNotifications();
        };
      })(this)), 5000);
    };

    Notifications.prototype.getNewNotifications = function() {
      return $.ajax({
        url: '/notifications.json',
        dataType: 'JSON',
        method: 'GET',
        success: this.handleSuccess
      });
    };

    Notifications.prototype.handleClick = function(e) {
      return $.ajax({
        url: "/notifications/mark_as_read",
        dataType: "JSON",
        method: "POST",
        success: function() {
          return $("[data-behavior='unread-count']").text(0);
        }
      });
    };

    Notifications.prototype.reloadPage = function() {
      var current_url;
      current_url = window.location.href;
      console.log("current url" + current_url);
      if (current_url.includes('dashboard')) {
        location.reload();
        this.handleClick();
      }
      return console.log(current_url.includes('dashboard'));
    };

    Notifications.prototype.handleSuccess = function(data) {
      var items, unread_count;
      unread_count = 0;
      items = $.map(data, (function(_this) {
        return function(notification) {
          var isNew;
          isNew = '';
          if (notification.unread) {
            unread_count += 1;
            _this.reloadPage();
            isNew = 'ðŸ”µ';
          }
          return "<li><a>" + isNew + " " + notification.action + " " + notification.notifiable.type + "</a></li>";
        };
      })(this));
      $("[data-behavior='unread-count']").text(unread_count);
      return $("[data-behavior='notification-items']").html(items);
    };

    jQuery(function() {
      return new Notifications;
    });

    return Notifications;

  })();

}).call(this);
:ET